source("https://bioconductor.org/biocLite.R")
biocLite("Biostrings")
library(Biostrings)
Biostrings::compareStrings()
?compareStrings
complement(primer_seq)
complement(primer_seq)
?complement
DNAString(primer_seq)
complement(DNAString(primer_seq))
# filter projects of interest ---------------------------------------------
keep_flowcells <- c("150625_D00565_0089_BHMMCMADXX",
"150828_D00565_0095_BC6NRPANXX")
adapter_seq_dat <- adapter_seq_dat %>%
filter(flowcell %in% keep_flowcells)
primer_comp <- complement(DNAString(primer_seq))
primer_rcomp <- reverseComplement(DNAString(primer_seq))
primer_comp
as.character(primer_comp)
# check for PCR primer sequence -------------------------------------------
primer_seq <- "ATCTCGTATGCCGTCTTCTGCTTG"
primer_comp <- complement(DNAString(primer_seq)) %>% as.character()
primer_rcomp <- reverseComplement(DNAString(primer_seq)) %>% as.character()
adapter_seq_dat <- adapter_seq_dat %>%
mutate(has_primer = str_detect(primer_seq, seq))
# summarize adapter hits per lib
adapter_seq_summary <- adapter_seq_dat %>%
group_by(flowcell, project, lane, prep, lib_id) %>%
summarise(num_hits = sum(len > 0),
mean_len = mean(len),
total_count = sum(count),
total_perc = sum(percent))
# check for PCR primer sequence -------------------------------------------
primer_seq <- "ATCTCGTATGCCGTCTTCTGCTTG"
primer_comp <- complement(DNAString(primer_seq)) %>% as.character()
primer_rcomp <- reverseComplement(DNAString(primer_seq)) %>% as.character()
adapter_seq_dat <- adapter_seq_dat %>%
mutate(has_primer = str_detect(primer_seq, seq),
has_primer_comp = str_detect(primer_comp, seq),
has_primer_rcomp = str_detect(primer_rcomp, seq))
# summarize adapter hits per lib
adapter_seq_summary <- adapter_seq_dat %>%
group_by(flowcell, project, lane, prep, lib_id) %>%
summarise(num_hits = sum(len > 0),
mean_len = mean(len),
total_count = sum(count),
total_perc = sum(percent))
adapter_seq_dat %>% filter(lib_id == "lib7400_HMMCMADXX")
adapter_seq_dat %>% filter(lib_id == "lib7400_HMMCMADXX") %>% select(seq)
adapter_seq_dat %>% filter(lib_id == "lib7400_HMMCMADXX") %>% select(seq) %>% as.character()
adapter_seq_dat %>% filter(lib_id == "lib7400_HMMCMADXX") %>% select(seq) %>% as.character() %>% compareStrings(primer_seq)
?compareStrings
# check for PCR primer sequence -------------------------------------------
primer_seq <- "ATCTCGTATGCCGTCTTCTGCTTG"
primer_seq <- "AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGA"
primer_comp <- complement(DNAString(primer_seq)) %>% as.character()
primer_rcomp <- reverseComplement(DNAString(primer_seq)) %>% as.character()
adapter_seq_dat <- adapter_seq_dat %>%
mutate(has_primer = str_detect(primer_seq, seq),
has_primer_comp = str_detect(primer_comp, seq),
has_primer_rcomp = str_detect(primer_rcomp, seq))
# summarize adapter hits per lib
adapter_seq_summary <- adapter_seq_dat %>%
group_by(flowcell, project, lane, prep, lib_id) %>%
summarise(num_hits = sum(len > 0),
mean_len = mean(len),
total_count = sum(count),
total_perc = sum(percent))
adapter_seq_dat %>%
filter(lib_id == "lib7400_HMMCMADXX") %>%
select(seq) %>% as.character() %>%
compareStrings(primer_seq)
adapter_seq_dat %>%
filter(lib_id == "lib7400_HMMCMADXX") %>%
select(seq) %>% as.character()
adapter_seq_dat %>%
filter(lib_id == "lib7400_HMMCMADXX") %>%
select(seq) %>% as.character() %>%
str_length()
str_pad(width = 56, pad = "-", primer_seq)
# check for PCR primer sequence -------------------------------------------
primer_seq <- "ATCTCGTATGCCGTCTTCTGCTTG"
primer_seq <- "AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGA"
primer_comp <- complement(DNAString(primer_seq)) %>% as.character()
primer_rcomp <- reverseComplement(DNAString(primer_seq)) %>% as.character()
adapter_seq_dat <- adapter_seq_dat %>%
mutate(has_primer = str_detect(primer_seq, seq),
has_primer_comp = str_detect(primer_comp, seq),
has_primer_rcomp = str_detect(primer_rcomp, seq))
adapter_seq_dat %>%
filter(lib_id == "lib7400_HMMCMADXX") %>%
select(seq) %>% as.character() %>%
compareStrings(str_pad(width = 56, pad = "-", primer_seq))
# summarize adapter hits per lib
adapter_seq_summary <- adapter_seq_dat %>%
group_by(flowcell, project, lane, prep, lib_id) %>%
summarise(num_hits = sum(len > 0),
mean_len = mean(len),
total_count = sum(count),
total_perc = sum(percent))
adapter_seq_dat %>%
filter(lib_id == "lib7400_HMMCMADXX") %>%
select(seq) %>% as.character() %>%
compareStrings(str_pad(width = 56, pad = "-", primer_seq))
str_length(primer_seq)
primer_seq <- "ATCTCGTATGCCGTCTTCTGCTTG"
primer_comp <- complement(DNAString(primer_seq)) %>% as.character()
primer_rcomp <- reverseComplement(DNAString(primer_seq)) %>% as.character()
adapter_seq_dat %>%
filter(lib_id == "lib7400_HMMCMADXX") %>%
select(seq) %>% as.character() %>%
compareStrings(str_pad(width = 56, pad = "-", primer_seq))
adapter_seq_dat %>%
filter(lib_id == "lib7400_HMMCMADXX") %>%
select(seq) %>% as.character() %>%
compareStrings(str_pad(width = 56, pad = "-", primer_rcomp))
adapter_seq_dat %>%
filter(lib_id == "lib7400_HMMCMADXX") %>%
select(seq) %>% as.character() %>%
compareStrings(str_pad(width = 56, pad = "-", primer_comp))
# check for PCR primer sequence -------------------------------------------
primer_seq <- "CAAGCAGAAGACGGCATACGAGAT"
# primer_seq <- "AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGA"
primer_comp <- complement(DNAString(primer_seq)) %>% as.character()
primer_rcomp <- reverseComplement(DNAString(primer_seq)) %>% as.character()
adapter_seq_dat <- adapter_seq_dat %>%
mutate(has_primer = str_detect(primer_seq, seq),
has_primer_comp = str_detect(primer_comp, seq),
has_primer_rcomp = str_detect(primer_rcomp, seq))
# summarize adapter hits per lib
adapter_seq_summary <- adapter_seq_dat %>%
group_by(flowcell, project, lane, prep, lib_id) %>%
summarise(num_hits = sum(len > 0),
mean_len = mean(len),
total_count = sum(count),
total_perc = sum(percent))
?pairwiseAlignment
# test --------------------------------------------------------------------
testSeq <- adapter_seq_dat %>%
filter(lib_id = "lib7400_HMMCMADXX") %>%
select(seq) %>%
as.character()
# summarize adapter hits per lib
adapter_seq_summary <- adapter_seq_dat %>%
group_by(flowcell, project, lane, prep, lib_id) %>%
summarise(num_hits = sum(len > 0),
mean_len = mean(len),
total_count = sum(count),
total_perc = sum(percent))
# test --------------------------------------------------------------------
testSeq <- adapter_seq_dat %>%
filter(lib_id = "lib7400_HMMCMADXX") %>%
select(seq) %>%
as.character()
# test --------------------------------------------------------------------
testSeq <- adapter_seq_dat %>%
filter(lib_id == "lib7400_HMMCMADXX") %>%
select(seq) %>%
as.character()
# test --------------------------------------------------------------------
test_seq <- adapter_seq_dat %>%
filter(lib_id == "lib7400_HMMCMADXX") %>%
select(seq) %>%
as.character()
pairwiseAlignment(DNAString(test_seq), DNAString(primer_seq))
pairwiseAlignment(DNAString(test_seq), DNAString(primer_comp))
pairwiseAlignment(DNAString(test_seq), DNAString(primer_rcomp))
pairwiseAlignment(DNAString(primer_rcomp), DNAString(test_seq))
# test --------------------------------------------------------------------
primer_seq <- "CAAGCAGAAGACGGCATACGAGAT"
# primer_seq <- "AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGA"
primer_comp <- complement(DNAString(primer_seq)) %>% as.character()
primer_rcomp <- reverseComplement(DNAString(primer_seq)) %>% as.character()
test_seq <- adapter_seq_dat %>%
filter(lib_id == "lib7400_HMMCMADXX") %>%
select(seq) %>%
as.character()
pairwiseAlignment(DNAString(primer_rcomp), DNAString(test_seq))
# test --------------------------------------------------------------------
# primer_seq <- "CAAGCAGAAGACGGCATACGAGAT"
primer_seq <- "AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGA"
primer_comp <- complement(DNAString(primer_seq)) %>% as.character()
primer_rcomp <- reverseComplement(DNAString(primer_seq)) %>% as.character()
test_seq <- adapter_seq_dat %>%
filter(lib_id == "lib7400_HMMCMADXX") %>%
select(seq) %>%
as.character()
pairwiseAlignment(DNAString(primer_rcomp), DNAString(test_seq))
# test --------------------------------------------------------------------
# primer_seq <- "CAAGCAGAAGACGGCATACGAGAT"
primer_seq <- "AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGA"
primer_comp <- complement(DNAString(primer_seq)) %>% as.character()
primer_rcomp <- reverseComplement(DNAString(primer_seq)) %>% as.character()
test_seq <- adapter_seq_dat %>%
filter(lib_id == "lib7400_HMMCMADXX") %>%
select(seq) %>%
as.character()
pairwiseAlignment(DNAString(primer_seq), DNAString(test_seq))
# test --------------------------------------------------------------------
# primer_seq <- "CAAGCAGAAGACGGCATACGAGAT"
primer_seq <- "AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGA"
primer_comp <- complement(DNAString(primer_seq)) %>% as.character()
primer_rcomp <- reverseComplement(DNAString(primer_seq)) %>% as.character()
test_seq <- adapter_seq_dat %>%
filter(lib_id == "lib7400_HMMCMADXX") %>%
select(seq) %>%
as.character()
pairwiseAlignment(DNAString(primer_comp), DNAString(test_seq))
# test --------------------------------------------------------------------
primer_seq <- "CAAGCAGAAGACGGCATACGAGAT"
# primer_seq <- "AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGA"
primer_comp <- complement(DNAString(primer_seq)) %>% as.character()
primer_rcomp <- reverseComplement(DNAString(primer_seq)) %>% as.character()
test_seq <- adapter_seq_dat %>%
filter(lib_id == "lib7400_HMMCMADXX") %>%
select(seq) %>%
as.character()
pairwiseAlignment(DNAString(primer_rcomp), DNAString(test_seq))
# filter projects of interest ---------------------------------------------
keep_flowcells <- c("150625_D00565_0089_BHMMCMADXX",
"150828_D00565_0095_BC6NRPANXX")
adapter_seq_dat <- adapter_seq_dat %>%
filter(flowcell %in% keep_flowcells) %>%
mutate(lib_id = str_extract(lib_id, "lib[0-9]+"))
# read adapter seq file ---------------------------------------------------
adapter_seq_file <- "data/fastqc_adapter_seqs.csv"
adapter_seq_dat <- read_csv(adapter_seq_file) %>%
.[, -1]
# filter projects of interest ---------------------------------------------
keep_flowcells <- c("150625_D00565_0089_BHMMCMADXX",
"150828_D00565_0095_BC6NRPANXX")
adapter_seq_dat <- adapter_seq_dat %>%
filter(flowcell %in% keep_flowcells) %>%
mutate(lib_id = str_extract(lib_id, "lib[0-9]+"))
# extract adapter match lengths -------------------------------------------
adapter_seq_dat <- adapter_seq_dat %>%
mutate(len = ifelse(percent == 0, 0,
as.numeric(str_extract(match,
"[0-9]+(?=bp)"))))
?write_csv
# write file --------------------------------------------------------------
contam_file <- "data/example_fastqc_seqs.csv"
write_csv(adapter_seq_dat, contam_file)
# summarize ---------------------------------------------------------------
# summarize adapter hits per lib
adapter_seq_summary <- adapter_seq_dat %>%
group_by(flowcell, project, lane, prep, lib_id) %>%
summarise(num_hits = sum(len > 0),
mean_len = mean(len),
total_count = sum(count),
total_perc = sum(percent))
# plot adapter seq data ---------------------------------------------------
adapter_seq_summary %>%
# filter(flowcell != '150615_D00565_0087_AC6VG0ANXX') %>%
ggplot(aes(x = project, y = total_perc)) +
geom_point(aes(fill = prep, size = mean_len),
shape = 21, alpha = 0.5,
position = position_jitter(width = 0.3, height = 0)) +
facet_wrap(~ flowcell, scales = "free_x", ncol = 2) +
theme(axis.text.x = element_text(angle = -90, hjust = 0)) +
scale_fill_colorblind()
View(adapter_seq_summary)
# read adapter seq file ---------------------------------------------------
adapter_seq_file <- "data/fastqc_adapter_seqs.csv"
adapter_seq_dat <- read_csv(adapter_seq_file) %>%
.[, -1]
# filter projects of interest ---------------------------------------------
keep_flowcells <- c("150625_D00565_0089_BHMMCMADXX",
"150828_D00565_0095_BC6NRPANXX")
keep_flowcells <- c("150729_D00565_0092_AC6VC6ANXX")
adapter_seq_dat <- adapter_seq_dat %>%
filter(flowcell %in% keep_flowcells) %>%
mutate(lib_id = str_extract(lib_id, "lib[0-9]+"))
# summarize ---------------------------------------------------------------
# summarize adapter hits per lib
adapter_seq_summary <- adapter_seq_dat %>%
group_by(flowcell, project, lane, prep, lib_id) %>%
summarise(num_hits = sum(len > 0),
mean_len = mean(len),
total_count = sum(count),
total_perc = sum(percent))
# extract adapter match lengths -------------------------------------------
adapter_seq_dat <- adapter_seq_dat %>%
mutate(len = ifelse(percent == 0, 0,
as.numeric(str_extract(match,
"[0-9]+(?=bp)"))))
# summarize ---------------------------------------------------------------
# summarize adapter hits per lib
adapter_seq_summary <- adapter_seq_dat %>%
group_by(flowcell, project, lane, prep, lib_id) %>%
summarise(num_hits = sum(len > 0),
mean_len = mean(len),
total_count = sum(count),
total_perc = sum(percent))
# plot adapter seq data ---------------------------------------------------
adapter_seq_summary %>%
# filter(flowcell != '150615_D00565_0087_AC6VG0ANXX') %>%
ggplot(aes(x = project, y = total_perc)) +
geom_point(aes(fill = prep, size = mean_len),
shape = 21, alpha = 0.5,
position = position_jitter(width = 0.3, height = 0)) +
facet_wrap(~ flowcell, scales = "free_x", ncol = 2) +
theme(axis.text.x = element_text(angle = -90, hjust = 0)) +
scale_fill_colorblind()
# read adapter seq file ---------------------------------------------------
adapter_seq_file <- "data/fastqc_adapter_seqs.csv"
adapter_seq_dat <- read_csv(adapter_seq_file) %>%
.[, -1]
# filter projects of interest ---------------------------------------------
keep_flowcells <- c("150625_D00565_0089_BHMMCMADXX",
"150828_D00565_0095_BC6NRPANXX")
# keep_flowcells <- c("150729_D00565_0092_AC6VC6ANXX")
adapter_seq_dat <- adapter_seq_dat %>%
filter(flowcell %in% keep_flowcells) %>%
mutate(lib_id = str_extract(lib_id, "lib[0-9]+"))
# extract adapter match lengths -------------------------------------------
adapter_seq_dat <- adapter_seq_dat %>%
mutate(len = ifelse(percent == 0, 0,
as.numeric(str_extract(match,
"[0-9]+(?=bp)"))))
# summarize ---------------------------------------------------------------
# summarize adapter hits per lib
adapter_seq_summary <- adapter_seq_dat %>%
group_by(flowcell, project, lane, prep, lib_id) %>%
summarise(num_hits = sum(len > 0),
mean_len = mean(len),
total_count = sum(count),
total_perc = sum(percent))
# plot adapter seq data ---------------------------------------------------
adapter_seq_summary %>%
# filter(flowcell != '150615_D00565_0087_AC6VG0ANXX') %>%
ggplot(aes(x = project, y = total_perc)) +
geom_point(aes(fill = prep, size = mean_len),
shape = 21, alpha = 0.5,
position = position_jitter(width = 0.3, height = 0)) +
facet_wrap(~ flowcell, scales = "free_x", ncol = 2) +
theme(axis.text.x = element_text(angle = -90, hjust = 0)) +
scale_fill_colorblind()
# plot adapter seq data ---------------------------------------------------
adapter_seq_summary %>%
# filter(flowcell != '150615_D00565_0087_AC6VG0ANXX') %>%
ggplot(aes(x = project, y = num_hits)) +
geom_point(aes(fill = prep, size = mean_len),
shape = 21, alpha = 0.5,
position = position_jitter(width = 0.3, height = 0)) +
facet_wrap(~ flowcell, scales = "free_x", ncol = 2) +
theme(axis.text.x = element_text(angle = -90, hjust = 0)) +
scale_fill_colorblind()
20 * 5
20 * 0.5
1*5
1*.5
mean(.5, 5)
5.5 /2
3e9 * 30 / 125
3e9 * 30 / 125 / 2
2 * 125 * 250 * 3e9
2 * 125 * 250 / 3e9
2 * 125 * 350 / 3e9
3e9 * 30 / 150 / 2
3e9 * 40 / 150 / 2
3e9 * 35 / 150 / 2
1.4*350
500*8
8/1.4
5.714*350
2000/350
2000/350/8
350*8/2000
library(reshape2)
# load libraries ----------------------------------------------------------
library(readr)
library(dplyr)
library(ggplot2)
library(reshape2)
library(stringr)
library(ggthemes)
library(Biostrings)
# read adapter seq file ---------------------------------------------------
adapter_seq_file <- "data/fastqc_adapter_seqs_151123.csv"
adapter_seq_dat <- read_csv(adapter_seq_file) %>%
.[, -1]
View(adapter_seq_dat)
# filter projects of interest ---------------------------------------------
# keep_flowcells <- c("150625_D00565_0089_BHMMCMADXX",
# "150828_D00565_0095_BC6NRPANXX")
# keep_flowcells <- c("150729_D00565_0092_AC6VC6ANXX")
keep_flowcells <- c("151123_D00565_0099_BC81MLANXX")
adapter_seq_dat <- adapter_seq_dat %>%
filter(flowcell %in% keep_flowcells) %>%
mutate(lib_id = str_extract(lib_id, "lib[0-9]+"))
# extract adapter match lengths -------------------------------------------
adapter_seq_dat <- adapter_seq_dat %>%
mutate(len = ifelse(percent == 0, 0,
as.numeric(str_extract(match,
"[0-9]+(?=bp)"))))
# summarize ---------------------------------------------------------------
# summarize adapter hits per lib
adapter_seq_summary <- adapter_seq_dat %>%
group_by(flowcell, project, lane, prep, lib_id) %>%
summarise(num_hits = sum(len > 0),
mean_len = mean(len),
total_count = sum(count),
total_perc = sum(percent))
# plot adapter seq data ---------------------------------------------------
adapter_seq_summary %>%
# filter(flowcell != '150615_D00565_0087_AC6VG0ANXX') %>%
ggplot(aes(x = project, y = num_hits)) +
geom_point(aes(fill = prep, size = mean_len),
shape = 21, alpha = 0.5,
position = position_jitter(width = 0.3, height = 0)) +
facet_wrap(~ flowcell, scales = "free_x", ncol = 2) +
theme(axis.text.x = element_text(angle = -90, hjust = 0)) +
scale_fill_colorblind()
length(unique(adapter_seq_dat$seq))
adapter_seq_dat %>% group_by(lib_id) %>% n_distinct(seq)
adapter_seq_dat %>% group_by(lib_id) %>% distinct(seq)
adapter_seq_dat %>% group_by(lib_id) %>% tally(seq)
adapter_seq_dat %>% group_by(lib_id, seq) %>% tally()
adapter_seq_dat %>% group_by(lib_id, seq) %>% tally() %>% summarise(sum(n))
adapter_seq_dat %>% group_by(lib_id, seq) %>% tally() %>% ungroup() %>% summarise(sum(n))
length(unique(adapter_seq_dat$seq[!is.na(adapter_seq_dat$seq)]))
length(adapter_seq_dat$seq[!is.na(adapter_seq_dat$seq)])
adapter_seq_dat %>% filter(lib_id == "lib9749")
adapter_seq_dat %>% filter(lib_id == "lib9749") %>% group_by(match) %>% filter(percent == max(percent))
adapter_seq_dat %>% filter(lib_id == "lib9749") %>% mutate(match = str_replace(match, " \(.*\)", ""))
adapter_seq_dat %>% filter(lib_id == "lib9749") %>% mutate(match = str_replace(match, " \\(.*\\)", ""))
adapter_seq_dat %>% filter(lib_id == "lib9749") %>% mutate(match = str_replace(match, " \\(.*\\)", "")) %>% group_by(match) %>% filter(percent == max(percent))
# summarize ---------------------------------------------------------------
# filter adapter hits
adapter_seq_filtered <- adapter_seq_dat %>%
mutate(match = str_replace(match " \\(.*\\)", "")) %>%
group_by(lib_id, match) %>%
filter(percent == max(percent))
# summarize adapter hits per lib
adapter_seq_summary <- adapter_seq_dat %>%
group_by(flowcell, project, lane, prep, lib_id) %>%
summarise(num_hits = sum(len > 0),
mean_len = mean(len),
total_count = sum(count),
total_perc = sum(percent))
# summarize ---------------------------------------------------------------
# filter adapter hits
adapter_seq_filtered <- adapter_seq_dat %>%
mutate(match = str_replace(match, " \\(.*\\)", "")) %>%
group_by(lib_id, match) %>%
filter(percent == max(percent))
# summarize adapter hits per lib
adapter_seq_summary <- adapter_seq_dat %>%
group_by(flowcell, project, lane, prep, lib_id) %>%
summarise(num_hits = sum(len > 0),
mean_len = mean(len),
total_count = sum(count),
total_perc = sum(percent))
View(adapter_seq_filtered)
# summarize ---------------------------------------------------------------
# filter adapter hits
adapter_seq_filtered <- adapter_seq_dat %>%
mutate(match = str_replace(match, " \\(.*\\)", "")) %>%
group_by(lib_id, match) %>%
filter(percent == max(percent))
# summarize adapter hits per lib
adapter_seq_summary <- adapter_seq_filtered %>%
group_by(flowcell, project, lane, prep, lib_id) %>%
summarise(num_hits = sum(len > 0),
mean_len = mean(len),
total_count = sum(count),
total_perc = sum(percent))
# plot adapter seq data ---------------------------------------------------
adapter_seq_summary %>%
# filter(flowcell != '150615_D00565_0087_AC6VG0ANXX') %>%
ggplot(aes(x = project, y = num_hits)) +
geom_point(aes(fill = prep, size = mean_len),
shape = 21, alpha = 0.5,
position = position_jitter(width = 0.3, height = 0)) +
facet_wrap(~ flowcell, scales = "free_x", ncol = 2) +
theme(axis.text.x = element_text(angle = -90, hjust = 0)) +
scale_fill_colorblind()
# plot adapter seq data ---------------------------------------------------
adapter_seq_summary %>%
# filter(flowcell != '150615_D00565_0087_AC6VG0ANXX') %>%
ggplot(aes(x = project, y = total_perc)) +
geom_point(aes(fill = prep, size = mean_len),
shape = 21, alpha = 0.5,
position = position_jitter(width = 0.3, height = 0)) +
facet_wrap(~ flowcell, scales = "free_x", ncol = 2) +
theme(axis.text.x = element_text(angle = -90, hjust = 0)) +
scale_fill_colorblind()
# summarize ---------------------------------------------------------------
# filter adapter hits
adapter_seq_filtered <- adapter_seq_dat %>%
mutate(match = str_replace(match, " \\(.*\\)", "")) %>%
group_by(lib_id, match) %>%
filter(percent == max(percent))
# summarize adapter hits per lib
adapter_seq_summary <- adapter_seq_filtered %>%
group_by(flowcell, project, lane, prep, lib_id) %>%
summarise(num_hits = sum(len > 0),
mean_len = mean(len),
mean_perc = mean(percent),
total_count = sum(count),
total_perc = sum(percent))
# plot adapter seq data ---------------------------------------------------
adapter_seq_summary %>%
# filter(flowcell != '150615_D00565_0087_AC6VG0ANXX') %>%
ggplot(aes(x = project, y = mean_perc)) +
geom_point(aes(fill = prep, size = mean_len),
shape = 21, alpha = 0.5,
position = position_jitter(width = 0.3, height = 0)) +
facet_wrap(~ flowcell, scales = "free_x", ncol = 2) +
theme(axis.text.x = element_text(angle = -90, hjust = 0)) +
scale_fill_colorblind()
